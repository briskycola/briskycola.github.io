---
title: "How To Install Void Linux with LUKS + KDE + PipeWire (unfinished)"
author: "Santiago Torres"
date: "2025-07-27"
toc: true
title-block-banner: true
---

## Introduction
Void Linux is one of the most unique Linux distros that
I've encountered. What makes Void Linux unique is that
it's a completely independent distro that is not a fork
of any mainstream distro. It is a stable rolling release,
which ensures that you get up to date packages without
worrying about system-breaking updates. Void Linux also
uses runit as the init system, which strongly emphasizes
the Unix Philosophy. You also get the choice to choose
either musl or glibc as your C library. This guide will
show you how to manually install Void Linux with LUKS
and the KDE Desktop Environment.

## Prerequisites
You must have a computer that supports UEFI. Any computer
from 2012-present should be fine. This guide is primarily
designed for UEFI computers, but I will update this guide
with Legacy BIOS commands whenever I have time.

## Preparing the live USB
As with any Linux distro, we need to flash an ISO image
to a USB drive. You can download the Void Linux ISO from
[https://repo-default.voidlinux.org/live/current/](https://repo-default.voidlinux.org/live/current/).
Make sure you download the correct ISO for your CPU
architecture. Most computers are x86_64 so you'll most
likely have to download `void-live-x86_64-20xxxxxx-base.iso`.
You can use the musl ISO if you want the musl C library,
but for this guide, I will be using the standard glibc ISO.
To flash the ISO on Windows, you can use
[Rufus](https://github.com/pbatard/rufus/releases/tag/v4.9)
or [Etcher](https://github.com/balena-io/etcher/releases/tag/v2.1.4).
On macOS and Linux, you can use either
[Etcher](https://github.com/balena-io/etcher/releases/tag/v2.1.4),
or the classic `dd` command as follows:
```bash
cd /path/to/iso
sudo dd if=void-live-x86_64-20xxxxxx-base.iso of=/dev/<your-disk> status=progress
```
All data will be erased from the USB upon flashing
the ISO. Make sure you backup any important data before
proceeding. I am not responsible for any potential data
loss.

## Booting the installation USB
Restart your PC and press the boot menu key to get into
the boot menu. This can vary depending on your BIOS.
Consult your motherboard manual or check with your
PC manufacturer for the boot menu key. Once you select
your USB, you will be prompted to login. For the username,
type `root`. For the password, type `voidlinux`. You will
now be greeted with a terminal prompt.

## Installation

### Connecting to the Internet
The first thing to do is to check if your have
internet access. If you're using an Ethernet cable,
you should be good to go. If you are using Wi-Fi,
you will have to connect manually. To do this,
you must first get the name of your Wi-Fi interface.
To do this, type `ls /sys/class/net` and you should
get an output similar to this:
```bash
lo  wlp1s0
```
Look for the `wlp` interface. This interface will
be used to connect to the Internet. We will now
use *wpa_supplicant* to connect to Wi-Fi.
Type the following commands:
```bash
wpa_passphrase "<your-wifi-name>" "<password>" >> /etc/wpa_supplicant/wpa_supplicant.conf
wpa_supplicant -B -i <your-interface> -c /etc/wpa_supplicant/wpa_supplicant.conf
ln -s /etc/sv/wpa_supplicant /var/service
```
To test if it works, type `ping -c 3 voidlinux.org`
and if your output is similar as shown below,
you're good to go.
```bash
PING voidlinux.org (2606:50c0:8000::153) 56 data bytes
64 bytes from 2606:50c0:8000::153: icmp_seq=1 ttl=56 time=19.5 ms
64 bytes from 2606:50c0:8000::153: icmp_seq=2 ttl=56 time=34.5 ms
64 bytes from 2606:50c0:8000::153: icmp_seq=3 ttl=56 time=34.0 ms

--- voidlinux.org ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2003ms
rtt min/avg/max/mdev = 19.466/29.298/34.468/6.955 ms
```

### Partitioning the disk
Now it is time to partition the disk. For this guide,
I will be assuming that the entire disk will be used.
The first think to do is check your disk layout.
type `lsblk` and you should see a list of disks
along with their capacity. If you have a SATA disk,
you'll most likely see `sda`, `sdb`, `sdc`, etc. If
you have an NVMe disk, you'll most likely see
`nvme0n1`, `nvme0n2`, `nvme1n1`, `nvme1n2`, etc.
